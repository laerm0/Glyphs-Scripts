# MenuTitle: Set Kerning Groups
# encoding: utf-8
# Copyright: Georg Seifert, 2010, www.schriftgestaltung.de Version 1.0

import sys
import os
from GlyphsApp import *
import traceback

Keys = [
    "B",
    "C",
    "D",
    "E",
    "F",
    "G",
    "I",
    "K",
    "L",
    "N",
    "P",
    "Q",
    "R",
    "Aacute",
    "Acaron",
    "Abreve",
    "Acircumflex",
    "Adieresis",
    "AE",
    "AEacute",
    "Agrave",
    "Amacron",
    "Aogonek",
    "Aring",
    "Aringacute",
    "Atilde",
    "Cacute",
    "Ccaron",
    "Ccedilla",
    "Ccircumflex",
    "Cdotaccent",
    "Dcaron",
    "Dcroat",
    "Eth",
    "Eacute",
    "Ebreve",
    "Ecaron",
    "Ecedilla",
    "Ecircumflex",
    "Edieresis",
    "Edotaccent",
    "Egrave",
    "Emacron",
    "Eogonek",
    "Gbreve",
    "Gcircumflex",
    "Gcommaaccent",
    "Gdotaccent",
    "Hbar",
    "Hcircumflex",
    "Iacute",
    "Ibreve",
    "Icaron",
    "Icircumflex",
    "Idieresis",
    "Idotaccent",
    "Igrave",
    "Imacron",
    "Iogonek",
    "Itilde",
    "IJ",
    "Jcircumflex",
    "Kcommaaccent",
    "Lacute",
    "Lcaron",
    "Lcommaaccent",
    "Ldot",
    "Lslash",
    "Nacute",
    "Ncaron",
    "Ncommaaccent",
    "Ntilde",
    "Oacute",
    "Obreve",
    "Ocircumflex",
    "Odieresis",
    "OE",
    "Ograve",
    "Ohorn",
    "Ohungarumlaut",
    "Omacron",
    "Oslash",
    "Oslashacute",
    "Otilde",
    "Racute",
    "Rcaron",
    "Rcommaaccent",
    "Sacute",
    "Scaron",
    "Scedilla",
    "Scommaaccent",
    "Scircumflex",
    "Tcaron",
    "Tcedilla",
    "Tcommaaccent",
    "Tbar",
    "Uacute",
    "Ubreve",
    "Ucaron",
    "Ucircumflex",
    "Udieresis",
    "Ugrave",
    "Uhungarumlaut",
    "Umacron",
    "Uogonek",
    "Uring",
    "Utilde",
    "Wacute",
    "Wcircumflex",
    "Wdieresis",
    "Wgrave",
    "Yacute",
    "Ycircumflex",
    "Ydieresis",
    "Ygrave",
    "Ymacron",
    "Zacute",
    "Zcaron",
    "Zdotaccent",
    "Thorn",
    "a",
    "b",
    "c",
    "d",
    "e",
    "h",
    "k",
    "l",
    "m",
    "p",
    "q",
    "r",
    "aacute",
    "abreve",
    "acaron",
    "acircumflex",
    "adieresis",
    "ae",
    "aeacute",
    "agrave",
    "amacron",
    "aogonek",
    "aring",
    "aringacute",
    "atilde",
    "cacute",
    "ccaron",
    "ccedilla",
    "ccircumflex",
    "cdotaccent",
    "dcaron",
    "dcroat",
    "eacute",
    "ebreve",
    "ecaron",
    "ecedilla",
    "ecircumflex",
    "edieresis",
    "edotaccent",
    "egrave",
    "emacron",
    "eogonek",
    "gbreve",
    "gcircumflex",
    "gcommaaccent",
    "gdotaccent",
    "hbar",
    "hcircumflex",
    "iacute",
    "ibreve",
    "icaron",
    "icircumflex",
    "idieresis",
    "igrave",
    "imacron",
    "iogonek",
    "itilde",
    "idotaccent",
    "dotlessi",
    "ij",
    "jcircumflex",
    "dotlessj",
    "kcommaaccent",
    "kgreenlandic",
    "lacute",
    "lcaron",
    "lcommaaccent",
    "ldot",
    "nacute",
    "napostrophe",
    "ncaron",
    "ncommaaccent",
    "ntilde",
    "oacute",
    "obreve",
    "ocaron",
    "ocircumflex",
    "odieresis",
    "oe",
    "ograve",
    "ohorn",
    "ohungarumlaut",
    "omacron",
    "oslash",
    "oslashacute",
    "otilde",
    "racute",
    "rcaron",
    "rcommaaccent",
    "sacute",
    "scaron",
    "scedilla",
    "scommaaccent",
    "scircumflex",
    "germandbls",
    "tbar",
    "tcaron",
    "tcedilla",
    "tcommaaccent",
    "uacute",
    "ubreve",
    "ucaron",
    "ucircumflex",
    "udieresis",
    "ugrave",
    "uhorn",
    "uhungarumlaut",
    "umacron",
    "uogonek",
    "uring",
    "utilde",
    "wacute",
    "wcircumflex",
    "wdieresis",
    "wgrave",
    "yacute",
    "ycircumflex",
    "ydieresis",
    "ygrave",
    "ymacron",
    "zacute",
    "zcaron",
    "zdotaccent",
    "thorn",
    "Be-cy",
    "Ve-cy",
    "Ge-cy",
    "Ie-cy",
    "Io-cy",
    "Ze-cy",
    "Ii-cy",
    "ShortI-cy",
    "Ka-cy",
    "En-cy",
    "O-cy",
    "Pe-cy",
    "Er-cy",
    "Es-cy",
    "Te-cy",
    "U-cy",
    "Ef-cy",
    "Ha-cy",
    "Tse-cy",
    "Che-cy",
    "Sha-cy",
    "Shcha-cy",
    "Hardsign-cy",
    "Yeru-cy",
    "Softsign-cy",
    "Ereversed-cy",
    "Iu-cy",
    "Ia-cy",
    "Gheupturn-cy",
    "Gje-cy",
    "E-cy",
    "Dze-cy",
    "I-cy",
    "Yi-cy",
    "Je-cy",
    "Lje-cy",
    "Nje-cy",
    "Kje-cy",
    "Ushort-cy",
    "Dzhe-cy",
    "Ie-cygrave",
    "I-cygrave",
    "Schwa",
    "Obarred-cy",
    "Shhadesender-cy",
    "Chedesender-cy",
    "Hadesender-cy",
    "Endescender-cy",
    "Kadescender-cy",
    "Zhedescender-cy",
    "Dzeabkhasian-cy",
    "Ertick-cy",
    "Gedescender-cy",
    "Haabkhasian-cy",
    "Entail-cy",
    "Komidje-cy",
    "Komidzje-cy",
    "Ksi-cy",
    "Ustraightstroke-cy",
    "Yusbig-cy",
    "a-cy",
    "ve-cy",
    "ge-cy",
    "ie-cy",
    "io-cy",
    "zhe-cy",
    "ii-cy",
    "iishort-cy",
    "ka-cy",
    "el-cy",
    "en-cy",
    "o-cy",
    "pe-cy",
    "emtail-cy",
    "er-cy",
    "es-cy",
    "te-cy",
    "u-cy",
    "ef-cy",
    "ha-cy",
    "tse-cy",
    "che-cy",
    "sha-cy",
    "shcha-cy",
    "hardsign-cy",
    "yeri-cy",
    "softsign-cy",
    "ereversed-cy",
    "iu-cy",
    "gheupturn-cy",
    "dje-cy",
    "gje-cy",
    "e-cy",
    "dze-cy",
    "i-cy",
    "yi-cy",
    "lje-cy",
    "nje-cy",
    "tshe-cy",
    "kje-cy",
    "ushort-cy",
    "dzhe-cy",
    "ie-cygrave",
    "iigrave-cy",
    "endescender-cy",
    "ustrait-cy",
    "hadesender-cy",
    "chedesender-cy",
    "obarred-cy",
    "cheabkhasian-cy",
    "dzeabkhasian-cy",
    "ghemiddlehook-cy",
    "haabkhasian-cy",
    "ksi-cy",
    "yusbig-cy",
    "yuslittle-cy",
    "Alpha",
    "Beta",
    "Gamma",
    "Delta",
    "Epsilon",
    "Zeta",
    "Eta",
    "Theta",
    "Iota",
    "Kappa",
    "Lambda",
    "Mu",
    "Nu",
    "Omicron",
    "Pi",
    "Rho",
    "Tau",
    "Upsilon",
    "Chi",
    "Alphatonos",
    "Epsilontonos",
    "Etatonos",
    "Iotatonos",
    "Iotadieresis",
    "Omicrontonos",
    "Upsilontonos",
    "Upsilondieresis",
    "Omegatonos",
    "beta",
    "eta",
    "kappa",
    "mu",
    "omicron",
    "rho",
    "sigma",
    "psi",
    "alphatonos",
    "epsilontonos",
    "etatonos",
    "iotadieresis",
    "omicrontonos",
    "upsilontonos",
    "upsilondieresistonos",
    "upsilondieresis",
    "omegatonos",
    "fi",
    "fl",
    "comma",
    "semicolon",
    "ellipsis",
    "softhyphen",
    "quoteleft",
    "quoteright",
    "quotedblright",
    "quotesinglbase",
    "quotedblbase",
    "guilsinglleft",
    "guilsinglright",
    "endash",
    "emdash",
    "periodcentered",
    "cent",
    "onesuperior",
    "perthousand",
    "semicolon",
    "quotedblbase"
]

DefaultKeys = {
    "B": ["H", ""],
    "C": ["O", ""],
    "D": ["H", "O"],
    "E": ["H", ""],
    "F": ["H", ""],
    "G": ["O", ""],
    "I": ["H", "H"],
    "K": ["H", ""],
    "L": ["H", ""],
    "N": ["H", "H"],
    "P": ["H", ""],
    "Q": ["O", "O"],
    "R": ["H", ""],
    "Aacute": ["A", "A"],
    "Acaron": ["A", "A"],
    "Abreve": ["A", "A"],
    "Acircumflex": ["A", "A"],
    "Adieresis": ["A", "A"],
    "AE": ["A", "E"],
    "AEacute": ["A", "E"],
    "Agrave": ["A", "A"],
    "Amacron": ["A", "A"],
    "Aogonek": ["A", "A"],
    "Aring": ["A", "A"],
    "Aringacute": ["A", "A"],
    "Atilde": ["A", "A"],
    "Cacute": ["O", "C"],
    "Ccaron": ["O", "C"],
    "Ccedilla": ["O", "C"],
    "Ccircumflex": ["O", "C"],
    "Cdotaccent": ["O", "C"],
    "Dcaron": ["D", "D"],
    "Dcroat": ["D", "D"],
    "Eth": ["H", "O"],
    "Eacute": ["H", "E"],
    "Ebreve": ["H", "E"],
    "Ecaron": ["H", "E"],
    "Ecedilla": ["H", "E"],
    "Ecircumflex": ["H", "E"],
    "Edieresis": ["H", "E"],
    "Edotaccent": ["H", "E"],
    "Egrave": ["H", "E"],
    "Emacron": ["H", "E"],
    "Eogonek": ["H", "E"],
    "Gbreve": ["O", "G"],
    "Gcircumflex": ["O", "G"],
    "Gcommaaccent": ["O", "G"],
    "Gdotaccent": ["O", "G"],
    "Hbar": ["H", "H"],
    "Hcircumflex": ["H", "H"],
    "Iacute": ["H", "H"],
    "Ibreve": ["H", "H"],
    "Icaron": ["H", "H"],
    "Icircumflex": ["H", "H"],
    "Idieresis": ["H", "H"],
    "Idotaccent": ["H", "H"],
    "Igrave": ["H", "H"],
    "Imacron": ["H", "H"],
    "Iogonek": ["H", "H"],
    "Itilde": ["H", "H"],
    "IJ": ["H", "J"],
    "Jcircumflex": ["J", "J"],
    "Kcommaaccent": ["H", "K"],
    "Lacute": ["H", "L"],
    "Lcaron": ["H", "L"],
    "Lcommaaccent": ["H", "L"],
    "Ldot": ["H", "L"],
    "Lslash": ["H", "L"],
    "Nacute": ["N", "N"],
    "Ncaron": ["N", "N"],
    "Ncommaaccent": ["N", "N"],
    "Ntilde": ["N", "N"],
    "Oacute": ["O", "O"],
    "Obreve": ["O", "O"],
    "Ocircumflex": ["O", "O"],
    "Odieresis": ["O", "O"],
    "OE": ["O", "E"],
    "Ograve": ["O", "O"],
    "Ohorn": ["O", "O"],
    "Ohungarumlaut": ["O", "O"],
    "Omacron": ["O", "O"],
    "Oslash": ["O", "O"],
    "Oslashacute": ["O", "O"],
    "Otilde": ["O", "O"],
    "Racute": ["H", "R"],
    "Rcaron": ["H", "R"],
    "Rcommaaccent": ["H", "R"],
    "Sacute": ["S", "S"],
    "Scaron": ["S", "S"],
    "Scedilla": ["S", "S"],
    "Scommaaccent": ["S", "S"],
    "Scircumflex": ["S", "S"],
    "Tcaron": ["T", "T"],
    "Tcedilla": ["T", "T"],
    "Tcommaaccent": ["T", "T"],
    "Tbar": ["T", "T"],
    "Uacute": ["U", "U"],
    "Ubreve": ["U", "U"],
    "Ucaron": ["U", "U"],
    "Ucircumflex": ["U", "U"],
    "Udieresis": ["U", "U"],
    "Ugrave": ["U", "U"],
    "Uhungarumlaut": ["U", "U"],
    "Umacron": ["U", "U"],
    "Uogonek": ["U", "U"],
    "Uring": ["U", "U"],
    "Utilde": ["U", "U"],
    "Wacute": ["W", "W"],
    "Wcircumflex": ["W", "W"],
    "Wdieresis": ["W", "W"],
    "Wgrave": ["W", "W"],
    "Yacute": ["Y", "Y"],
    "Ycircumflex": ["Y", "Y"],
    "Ydieresis": ["Y", "Y"],
    "Ygrave": ["Y", "Y"],
    "Ymacron": ["Y", "Y"],
    "Zacute": ["Z", "Z"],
    "Zcaron": ["Z", "Z"],
    "Zdotaccent": ["Z", "Z"],
    "Thorn": ["H", ""],
    "a": ["", "n"],
    "b": ["h", "o"],
    "c": ["o", "c"],
    "d": ["o", "l"],
    "e": ["o", "e"],
    "h": ["", "n"],
    "k": ["h", "k"],
    "l": ["h", ""],
    "m": ["n", "n"],
    "p": ["", "o"],
    "q": ["o", ""],
    "r": ["n", ""],
    "aacute": ["a", "n"],
    "abreve": ["a", "n"],
    "acaron": ["a", "n"],
    "acircumflex": ["a", "n"],
    "adieresis": ["a", "n"],
    "ae": ["a", "e"],
    "aeacute": ["a", "e"],
    "agrave": ["a", "n"],
    "amacron": ["a", "n"],
    "aogonek": ["a", "n"],
    "aring": ["a", "n"],
    "aringacute": ["a", "n"],
    "atilde": ["a", "n"],
    "cacute": ["o", "c"],
    "ccaron": ["o", "c"],
    "ccedilla": ["o", "c"],
    "ccircumflex": ["o", "c"],
    "cdotaccent": ["o", "c"],
    "dcaron": ["o", "l"],
    "dcroat": ["o", "l"],
    "eacute": ["o", "e"],
    "ebreve": ["o", "e"],
    "ecaron": ["o", "e"],
    "ecedilla": ["o", "e"],
    "ecircumflex": ["o", "e"],
    "edieresis": ["o", "e"],
    "edotaccent": ["o", "e"],
    "egrave": ["o", "e"],
    "emacron": ["o", "e"],
    "eogonek": ["o", "e"],
    "gbreve": ["g", "g"],
    "gcircumflex": ["g", "g"],
    "gcommaaccent": ["g", "g"],
    "gdotaccent": ["g", "g"],
    "hbar": ["h", "n"],
    "hcircumflex": ["h", "n"],
    "iacute": ["i", "i"],
    "ibreve": ["i", "i"],
    "icaron": ["i", "i"],
    "icircumflex": ["i", "i"],
    "idieresis": ["i", "i"],
    "igrave": ["i", "i"],
    "imacron": ["i", "i"],
    "iogonek": ["i", "i"],
    "itilde": ["i", "i"],
    "idotaccent": ["i", "i"],
    "dotlessi": ["i", "i"],
    "ij": ["i", "i"],
    "jcircumflex": ["j", "j"],
    "dotlessj": ["j", "j"],
    "kcommaaccent": ["h", "k"],
    "kgreenlandic": ["h", "k"],
    "lacute": ["h", "l"],
    "lcaron": ["h", "l"],
    "lcommaaccent": ["h", "l"],
    "ldot": ["h", "l"],
    "nacute": ["n", "n"],
    "napostrophe": ["n", "n"],
    "ncaron": ["n", "n"],
    "ncommaaccent": ["n", "n"],
    "ntilde": ["n", "n"],
    "oacute": ["o", "o"],
    "obreve": ["o", "o"],
    "ocaron": ["o", "o"],
    "ocircumflex": ["o", "o"],
    "odieresis": ["o", "o"],
    "oe": ["o", "e"],
    "ograve": ["o", "o"],
    "ohorn": ["o", "o"],
    "ohungarumlaut": ["o", "o"],
    "omacron": ["o", "o"],
    "oslash": ["o", "o"],
    "oslashacute": ["o", "o"],
    "otilde": ["o", "o"],
    "racute": ["n", "r"],
    "rcaron": ["n", "r"],
    "rcommaaccent": ["n", "r"],
    "sacute": ["s", "s"],
    "scaron": ["s", "s"],
    "scedilla": ["s", "s"],
    "scommaaccent": ["s", "s"],
    "scircumflex": ["s", "s"],
    "germandbls": ["h", ""],
    "tbar": ["t", "t"],
    "tcaron": ["t", "t"],
    "tcedilla": ["t", "t"],
    "tcommaaccent": ["t", "t"],
    "uacute": ["u", "u"],
    "ubreve": ["u", "u"],
    "ucaron": ["u", "u"],
    "ucircumflex": ["u", "u"],
    "udieresis": ["u", "u"],
    "ugrave": ["u", "u"],
    "uhorn": ["u", "u"],
    "uhungarumlaut": ["u", "u"],
    "umacron": ["u", "u"],
    "uogonek": ["u", "u"],
    "uring": ["u", "u"],
    "utilde": ["u", "u"],
    "wacute": ["w", "w"],
    "wcircumflex": ["w", "w"],
    "wdieresis": ["w", "w"],
    "wgrave": ["w", "w"],
    "yacute": ["y", "y"],
    "ycircumflex": ["y", "y"],
    "ydieresis": ["y", "y"],
    "ygrave": ["y", "y"],
    "ymacron": ["y", "y"],
    "zacute": ["z", "z"],
    "zcaron": ["z", "z"],
    "zdotaccent": ["z", "z"],
    "thorn": ["h", "o"],
    "A-cy": ["A-cy", "A-cy"],
    "Be-cy": ["H", ""],
    "Che-cy": ["", "H"],
    "Chedescender-cy": ["Che-cy", "Tse-cy"],
    "Cheabkhasian-cy": ["Che-cy", "De-cy"],
    "Chekhakassian-cy": ["Che-cy", "H"],
    "De-cy": ["De-cy", "De-cy"],
    "Dje-cy": ["T", ""],
    "Dze-cy": ["S", "S"],
    "Dzeabkhasian-cy": ["", ""],
    "Dzhe-cy": ["H", "H"],
    "E-cy": ["O", "C"],
    "Ef-cy": ["Phi", "Phi"],
    "Eiotified-cy": ["H", "E-cy"],
    "El-cy": ["", "H"],
    "En-cy": ["H", "H"],
    "Endescender-cy": ["H", "De-cy"],
    "Enghe-cy": ["H", "Ge-cy"],
    "Enhook-cy": ["H", "J"],
    "Entail-cy": ["H", ""],
    "Er-cy": ["H", "P"],
    "Ertick-cy": ["P", "Ertick-cy"],
    "Ereversed-cy": ["", "O"],
    "Es-cy": ["O", "C"],
    "Fita-cy": ["O", "O"],
    "Ge-cy": ["H", ""],
    "Gedescender-cy": ["H", ""],
    "Ghemiddlehook-cy": ["H", ""],
    "Ghestroke-cy": ["", "Ge-cy"],
    "Gheupturn-cy": ["H", "Ge-cy"],
    "Gje-cy": ["Ge-cy", "H"],
    "Ha-cy": ["X", "X"],
    "Haabkhasian-cy": ["O", ""],
    "Hadescender-cy": ["X", ""],
    "Hardsign-cy": ["T", "Softsign-cy"],
    "I-cy": ["H", "H"],
    "I-cygrave": ["H", "H"],
    "Ia-cy": ["", "H"],
    "Ie-cy": ["H", "E"],
    "Ie-cygrave": ["E", "H"],
    "Ii-cy": ["H", "H"],
    "Iishorttail-cy": ["H", "Entail-cy"],
    "Io-cy": ["H", "E"],
    "Iu-cy": ["H", "O"],
    "Je-cy": ["J", "J"],
    "Ka-cy": ["H", "K"],
    "Kadescender-cy": ["H", ""],
    "Kabashkir-cy": ["T", "K"],
    "Kahook-cy": ["H", "Ghemiddlehook-cy"],
    "Kastroke-cy": ["H", "K"],
    "Komide-cy": ["o", "l"],
    "Komidje-cy": ["o", ""],
    "Komidzje-cy": ["", "De-cy"],
    "Komilje-cy": ["El-cy", "Komidzje-cy"],
    "Kominje-cy": ["H", "Komidzje-cy"],
    "Komisje-cy": ["O", "G"],
    "Komitje-cy": ["T", "Komidzje-cy"],
    "Komizje-cy": ["Komidzje-cy", "Komidzje-cy"],
    "Koppa-cy": ["O", "C"],
    "Ksi-cy": ["", "B"],
    "Kje-cy": ["K", "H"],
    "Lje-cy": ["El-cy", "Softsign-cy"],
    "Nje-cy": ["H", "Softsign-cy"],
    "O-cy": ["O", "O"],
    "Obarred-cy": ["O", "O"],
    "Omega-cy": ["Omega", "Omega"],
    "Pe-cy": ["H", "H"],
    "Pemiddlehook-cy": ["H", "Ghemiddlehook-cy"],
    "Reversedze-cy": ["O", "C"],
    "Schwa": ["O", "O"],
    "Semisoftsign-cy": ["t", "o"],
    "Sha-cy": ["H", "H"],
    "Shcha-cy": ["H", "De-cy"],
    "Shhadesender-cy": ["", "H"],
    "ShortI-cy": ["H", "H"],
    "Softsign-cy": ["H", ""],
    "Te-cy": ["T", "T"],
    "Tedescender-cy": ["T", "Gedescender-cy"],
    "Tse-cy": ["H", "De-cy"],
    "Tshe-cy": ["T"],
    "U-cy": ["", "V"],
    "Ustraitstroke-cy": ["", ""],
    "Ushort-cy": ["U-cy", "U-cy"],
    "Ve-cy": ["H", "B"],
    "Yeru-cy": ["H", "H"],
    "Yat-cy": ["t", "o"],
    "Yusbig-cy": ["", ""],
    "Yusbigiotified-cy": ["H", "Yusbig-cy"],
    "Yuslittle-cy": ["A", "A"],
    "Yuslittleiotified-cy": ["H", "A"],
    "Yi-cy": ["H", "H"],
    "Ze-cy": ["", "B"],
    "Zhe-cy": ["X", "X"],
    "Zhedescender-cy": ["X", "Hadescender-cy"],
    "a-cy": ["a", "n"],
    "be-cy": ["H", "B"],
    "che-cy": ["u", ""],
    "cheabkhasian-cy": ["", "e"],
    "chedescenderabkhasian-cy": ["cheabkhasian-cy", "e"],
    "chedescender-cy": ["u", "endescender-cy"],
    "chekhakassian-cy": ["", "e"],
    "cheverticalstroke-cy": ["u", "che-cy"],
    "de-cy": ["", ""],
    "dje-cy": ["hbar", "j"],
    "dze-cy": ["s", "s"],
    "dzeabkhasian-cy": ["", "z"],
    "dzhe-cy": ["u", "n"],
    "e-cy": ["o", "c"],
    "eiotified-cy": ["n", "c"],
    "ef-cy": ["o", "o"],
    "el-cy": ["", "u"],
    "em-cy": ["n", "n"],
    "emtail-cy": ["n", ""],
    "en-cy": ["u", "n"],
    "endescender-cy": ["de-cy", "n"],
    "er-cy": ["o", ""],
    "ereversed-cy": ["", "o"],
    "enghe-cy": ["n", "ge-cy"],
    "enhook-cy": ["n", "j"],
    "entail-cy": ["n", "emtail-cy"],
    "ereversed-cy": ["ereversed-cy", "o"],
    "ertick-cy": ["p", "o"],
    "es-cy": ["c", "c"],
    "fita-cy": ["o", "o"],
    "ge-cy": ["n", ""],
    "gheupturn-cy": ["n", "ge-cy"],
    "gedescender-cy": ["n", "ge-cy"],
    "ghemiddlehook-cy": ["n", ""],
    "ghestroke-cy": ["n", "ge-cy"],
    "ghestrokehook-cy": ["n", "n"],
    "gheupturn-cy": ["n", "ge-cy"],
    "gje-cy": ["n", "ge-cy"],
    "ha-cy": ["x", "x"],
    "hadesender-cy": ["", "x"],
    "hardsign-cy": ["", "softsign-cy"],
    "haabkhasian-cy": ["o", ""],
    "hastroke-cy": ["x", "x"],
    "i-cy": ["i", "i"],
    "ia-cy": ["ia-cy", "u"],
    "ie-cy": ["o", "e"],
    "ie-cygrave": ["e", "o"],
    "ii-cy": ["u", "u"],
    "iigrave-cy": ["u", "n"],
    "iishort-cy": ["u", "n"],
    "io-cy": ["o", "e"],
    "iu-cy": ["n", "o"],
    "izhitsa-cy": ["v", "v"],
    "ka-cy": ["n", "k"],
    "kabashkir-cy": ["te-cy", "k"],
    "kadescender-cy": ["n", "k"],
    "kahook-cy": ["n", "ghemiddlehook-cy"],
    "kastroke-cy": ["Yat-cy", "k"],
    "komidje-cy": ["o", "Komidje-cy"],
    "komidzje-cy": ["ze-cy", "endescender-cy"],
    "komilje-cy": ["el-cy", "Komidje-cy"],
    "kominje-cy": ["n", "Komidje-cy"],
    "komisje-cy": ["o", "o"],
    "komitje-cy": ["te-cy", "Komidje-cy"],
    "komizje-cy": ["ze-cy", "Komidje-cy"],
    "koppa-cy": ["o", "c"],
    "ksi-cy": ["", "B"],
    "kje-cy": ["k", "n"],
    "lje-cy": ["el-cy", "softsign-cy"],
    "nje-cy": ["n", "softsign-cy"],
    "o-cy": ["o", "o"],
    "obarred-cy": ["o", "o"],
    "omega-cy": ["w", "w"],
    "pe-cy": ["u", "n"],
    "pemiddlehook-cy": ["n", "ghemiddlehook-cy"],
    "sha-cy": ["u", "n"],
    "shcha-cy": ["de-cy", "n"],
    "semisoftsign-cy": ["l", "b"],
    "softsign-cy": ["n", ""],
    "te-cy": ["te-cy", "te-cy"],
    "tedescender-cy": ["te-cy", "te-cy"],
    "tetse-cy": ["te-cy", "endescender-cy"],
    "tse-cy": ["de-cy", "n"],
    "tshe-cy": ["n", ""],
    "u-cy": ["y", "y"],
    "ushort-cy": ["y", "y"],
    "ustrait-cy": ["v", "v"],
    "ustraitstroke-cy": ["v", "v"],
    "ve-cy": ["n", ""],
    "yeri-cy": ["u", "n"],
    "yi-cy": ["i", "i"],
    "yusbig-cy": ["", ""],
    "yusbigiotified-cy": ["n", "yusbig-cy"],
    "yuslittle-cy": ["", ""],
    "yuslittleiotified-cy": ["n", "yuslittle-cy"],
    "ze-cy": ["", "ve-cy"],
    "zhe-cy": ["x", "x"],
    "zhedescender-cy": ["x", "endescender-cy"],
    "Alpha": ["A", "A"],
    "Beta": ["H", "B"],
    "Gamma": ["", "H"],
    "Delta": ["A", "A"],
    "Epsilon": ["H", "E"],
    "Zeta": ["Z", "Z"],
    "Eta": ["H", "H"],
    "Theta": ["O", "O"],
    "Iota": ["H", "H"],
    "Kappa": ["H", "K"],
    "Lambda": ["A", "A"],
    "Mu": ["M", "M"],
    "Nu": ["H", "H"],
    "Omicron": ["O", "O"],
    "Pi": ["H", "H"],
    "Rho": ["H", "P"],
    "Tau": ["T", "T"],
    "Upsilon": ["Y", "Y"],
    "Chi": ["X", "X"],
    "Alphatonos": ["A", "A"],
    "Epsilontonos": ["E", "E"],
    "Etatonos": ["H", "H"],
    "Iotatonos": ["H", "H"],
    "Iotadieresis": ["H", "H"],
    "Omicrontonos": ["O", "O"],
    "Upsilontonos": ["Y", "Y"],
    "Upsilondieresis": ["Y", "Y"],
    "Omegatonos": ["Omega", "Omega"],
    "beta": ["h", ""],
    "eta": ["n", "n"],
    "kappa": ["n", "k"],
    "mu": ["p", "u"],
    "omicron": ["o", "o"],
    "rho": ["rho", "o"],
    "sigma": ["o", ""],
    "psi": ["upsilon", "upsilon"],
    "alphatonos": ["alpha", "alpha"],
    "epsilontonos": ["epsilon", "epsilon"],
    "etatonos": ["n", "n"],
    "iotadieresis": ["i", "i"],
    "omicrontonos": ["o", "o"],
    "upsilontonos": ["upsilon", "upsilon"],
    "upsilondieresistonos": ["upsilon", "upsilon"],
    "upsilondieresis": ["upsilon", "upsilon"],
    "omegatonos": ["omega", "omega"],
    "fi": ["f", "i"],
    "fl": ["f", "l"],
    "comma": ["period", "period"],
    "semicolon": ["colon", "colon"],
    "ellipsis": ["period", "period"],
    "softhyphen": ["hyphen", "hyphen"],
    "quoteleft": ["quotedblleft", "quotedblleft"],
    "quoteright": ["quotedblleft", "quotedblleft"],
    "quotedblright": ["quotedblleft", "quotedblleft"],
    "quotesinglbase": ["period", "period"],
    "quotedblbase": ["period", "period"],
    "guilsinglleft": ["guillemotleft", "guillemotleft"],
    "guilsinglright": ["guillemotright", "guillemotright"],
    "endash": ["hyphen", "hyphen"],
    "emdash": ["hyphen", "hyphen"],
    "periodcentered": ["anoteleia", "anoteleia"],
    "cent": ["o", "c"],
    "perthousand": ["percent", "percent"],
    "semicolon": ["colon", "colon"],
    "quotedblbase": ["period", "period"],
    "oe.sc": ["o.sc", "e.sc"],
    "ae.sc": ["a.sc", "e.sc"],
    "eng": ["n", "j"],
    "alef-ar": ["alef-ar", "alef-ar"],

}


def KeysForGlyph(Glyph):
    if Glyph == None:
        return []
    global DefaultKeys
    LeftKey = False
    RightKey = False
    try:
        LeftKey = Glyph.leftKerningGroup
    except:
        print traceback.format_exc()
    try:
        RightKey = Glyph.rightKerningGroup
    except:
        print traceback.format_exc()
    try:
        if len(LeftKey < 1):
            LeftKey = False
    except TypeError:
        pass
    except:
        print traceback.format_exc()
    try:
        if len(RightKey < 1):
            RightKey = False
    except TypeError:
        pass
    except:
        print traceback.format_exc()
    return (LeftKey, RightKey)


def updateKeyGlyphsForSelected():
    Doc = Glyphs.currentDocument
    Font = Doc.font
    SelectedLayers = Doc.selectedLayers()
    for Layer in SelectedLayers:
        Glyph = Layer.parent
        LeftKey = ""
        RightKey = ""
        LigatureComponents = Glyph.name.split("_")
        if len(Layer.components) > 0 and len(Layer.paths) == 0 and Layer.components[0].transformStruct()[0] == 1:
            componentGlyph = Layer.components[0].component
            if not componentGlyph:
                raise Exception(
                    "Something is wrong with a Component in Glyphs %s" % Layer.parent.name)
            if componentGlyph.category == "Letter":
                LeftKey = KeysForGlyph(componentGlyph)[0]
            if not LeftKey:
                LeftKey = componentGlyph.name
            for Component in Layer.components:
                try:
                    if Component.component.category == "Letter":
                        if Component.transform[0] == 1:
                            componentGlyph = Component.component
                    elif Component.component.category != "Mark":
                        # componentGlyph = None
                        pass
                except:
                    pass
            if componentGlyph:
                RightKey = KeysForGlyph(componentGlyph)[1]
                if not RightKey:
                    RightKey = componentGlyph.name

        elif len(LigatureComponents) > 1:
            LeftGlyph = Font.glyphs[LigatureComponents[0]]
            if LeftGlyph != None:
                LeftKey = KeysForGlyph(LeftGlyph)[0]
            RightGlyph = Font.glyphs[LigatureComponents[-1]]
            if RightGlyph != None:
                RightKey = KeysForGlyph(RightGlyph)[1]
        if LeftKey:
            try:
                if LeftKey not in Font.glyphs and not Font.glyphs[LeftKey].export:
                    LeftKey = False
            except:
                LeftKey = False
        if RightKey:
            try:
                if RightKey not in Font.glyphs and not Font.glyphs[RightKey].export:
                    RightKey = False
            except:
                pass
        if not LeftKey:
            try:
                LeftKey = DefaultKeys[Glyph.name][0]
            except KeyError:
                pass
            except:
                print traceback.format_exc()
        if not RightKey:
            try:
                RightKey = DefaultKeys[Glyph.name][1]
            except KeyError:
                pass
            except:
                print traceback.format_exc()
        if not LeftKey and Glyph.name[-3:] == ".sc":
            try:
                Glyph
                LeftKey = DefaultKeys[Glyph.name[:-3].title()][0]
                if (len(LeftKey) > 0):
                    LeftKey = LeftKey.lower() + ".sc"
            except:
                print traceback.format_exc()
        if not RightKey and Glyph.name[-3:] == ".sc":
            try:
                RightKey = DefaultKeys[Glyph.name[:-3].title()][1]
                if (len(RightKey) > 0):
                    RightKey = RightKey.lower() + ".sc"
            except:
                print traceback.format_exc()
        if not LeftKey:
            LeftKey = Glyph.name
        if not RightKey:
            RightKey = Glyph.name

        print Glyph.name, ">", LeftKey, RightKey
        if Glyph.leftKerningGroup is None or len(Glyph.leftKerningGroup) == 0:
            Glyph.setLeftKerningGroup_(LeftKey)
        if Glyph.rightKerningGroup is None or len(Glyph.rightKerningGroup) == 0:
            Glyph.setRightKerningGroup_(RightKey)


def main():
    print "*** Start Update Key Glyphs ***\n"
    updateKeyGlyphsForSelected()
    print "*** Ende ****"


def test():
    NewDefaultKeys = {}
    for key in Keys:
        key = niceName(key)
        values = DefaultKeys[key]
        newValues = []
        for value in values:
            newValues.append(niceName(value))
        print "    \"%s\": [\"%s\", \"%s\"]," % (key, newValues[1], newValues[0])
        NewDefaultKeys[key] = newValues
main()

